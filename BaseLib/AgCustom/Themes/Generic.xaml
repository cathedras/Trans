<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:myzy.AgCustom"
    xmlns:lvcctrl="clr-namespace:Itenso.Windows.Controls.ListViewLayout"
    xmlns:util="clr-namespace:myzy.Util;assembly=Util"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AgCustom;component/Themes/AgCustomCommon.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <local:OrdinalConverter x:Key="OrdinalConverter" />

    <Style TargetType="{x:Type local:StatisticsCtl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StatisticsCtl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Resources>
                            <Style TargetType="StackPanel" x:Key="spStyleForStatisticsCtl">
                                <Setter Property="MinWidth" Value="50"/>
                                <Setter Property="Margin" Value="2"/>
                            </Style>
                        </Border.Resources>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <ItemsControl  Grid.Row="0" Grid.Column="1" ItemsSource="{Binding  StatisticsManage, RelativeSource={RelativeSource FindAncestor, AncestorType=local:StatisticsCtl}}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Style="{StaticResource spStyleForStatisticsCtl}" Orientation="Horizontal">
                                            <Grid Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=StackPanel}}" HorizontalAlignment="Stretch" >
                                                <WrapPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                                    <TextBlock Text="CH" VerticalAlignment="Center"/>
                                                    <TextBlock Text="{Binding ChannelId, Mode=OneWay, Converter={StaticResource IdxDispCvt}}" VerticalAlignment="Center"/>
                                                    <Button VerticalAlignment="Center" Command="{Binding ResetCountCmd, RelativeSource={RelativeSource FindAncestor, AncestorType=local:StatisticsCtl}}"
                                                        CommandParameter="{Binding ChannelId}">
                                                        <Button.ContentTemplate>
                                                            <DataTemplate>
                                                                <Image Width="8" Height="8" Source="../res/clear.png"/>
                                                            </DataTemplate>
                                                        </Button.ContentTemplate>
                                                    </Button>
                                                </WrapPanel>
                                            </Grid>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Rows="1"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <StackPanel Name="sp" Margin="0" Orientation="Vertical" Grid.Column="0" Grid.Row="1" VerticalAlignment="Stretch">
                                <TextBlock Text="Test counts" Margin="2,5" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                <TextBlock Text="Fail counts" Margin="2" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                <TextBlock Text="Yield" Margin="2" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </StackPanel>

                            <StackPanel Width="{Binding ElementName=sp, Path=Width}" Margin="2,0,2,2" Orientation="Vertical" Grid.Column="0" Grid.Row="2">
                                <TextBlock Text="Total Yield" Margin="0" VerticalAlignment="Center"/>
                            </StackPanel>

                            <ItemsControl Name="itemctl" Margin="0" Grid.Column="1" VerticalAlignment="Stretch" Grid.Row="1" 
                                          ItemsSource="{Binding StatisticsManage, RelativeSource={RelativeSource FindAncestor, AncestorType=local:StatisticsCtl}}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Style="{StaticResource spStyleForStatisticsCtl}" Orientation="Vertical">
                                            <TextBox VerticalAlignment="Center" IsReadOnly="True" Margin="2" FontSize="10" HorizontalAlignment="Stretch" TextAlignment="Center" Text="{Binding Total, Mode=OneWay}"></TextBox>
                                            <TextBox VerticalAlignment="Center" IsReadOnly="True" Margin="2" FontSize="10" HorizontalAlignment="Stretch" TextAlignment="Center" Text="{Binding ErrCount, Mode=OneWay}"></TextBox>
                                            <TextBox VerticalAlignment="Center" IsReadOnly="True" Margin="2" FontSize="10" HorizontalAlignment="Stretch" TextAlignment="Center" Text="{Binding Yield, Mode=OneWay, StringFormat=P2}"></TextBox>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Rows="1"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <StackPanel Width="{Binding ElementName=itemctl, Path=Width}" Grid.Row="2" Grid.Column="1" Name="sp1" HorizontalAlignment="Stretch" Style="{StaticResource spStyleForStatisticsCtl}" Orientation="Vertical">
                                <TextBox TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Stretch"  Margin="2,0" IsReadOnly="True" Text="{Binding StatisticsManage.YieldAll, Mode=OneWay, StringFormat={}{0:P2}, RelativeSource={RelativeSource FindAncestor, AncestorType=local:StatisticsCtl}}"></TextBox>
                            </StackPanel>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <local:VisibilityConvertor x:Key="VisibilityConvertor" />

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <Style TargetType="{x:Type local:ImageButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            Margin="{TemplateBinding Margin}"
                            SnapsToDevicePixels="true">

                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Image Margin="2 0"
                                   Source="{TemplateBinding Image}"
                                   Width="{TemplateBinding ImageWidth}"
                                   Height="{TemplateBinding ImageHeight}"
                                   Visibility="{TemplateBinding Image,Converter={StaticResource VisibilityConvertor}}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Grid.Column="1"/>
                            <ContentPresenter x:Name="contentText"
                                       Content="{TemplateBinding Content}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Margin="{TemplateBinding Padding}" 
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Grid.Column="0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="ContentElement.IsEnabled" TargetName="contentText" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type UserControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid DataContext="{Binding ElementName=root}">
                        <Border Background="#90000000" Visibility="{Binding Visibility}">
                            <Border BorderBrush="Black" BorderThickness="1" Background="AliceBlue" CornerRadius="10,0,10,0"
                                    VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect Color="Black" Opacity="0.5" Direction="270" ShadowDepth="0.7" />
                                </Border.BitmapEffect>
                                <Grid Margin="10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock x:Name="MessageTextBlock" Text="{Binding Message}" TextWrapping="Wrap" Margin="5" />
                                    <UniformGrid Grid.Row="1" Margin="5" Columns="2" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                                        <Button x:Name="OkButton" Command="{Binding OkBtnCmd, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ModalDialog}}" Content="Ok" Margin="2"  />
                                        <Button x:Name="CancelButton" Command="{Binding CancelBtnCmd, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ModalDialog}}" Content="Cancel" Margin="2" />
                                    </UniformGrid>
                                </Grid>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LogItemViewEx}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LogItemViewEx}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ListView MinHeight="200" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  Name="logListView"
                          BorderThickness="0"
                          lvcctrl:ListViewLayoutManager.Enabled="True" Opacity="0.9"
                          ItemsPanel="{DynamicResource ItemsPanelTemplate1}"
                          ItemsSource="{Binding MsgLogItems, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LogItemViewEx}, Mode=TwoWay}" 
                          Margin="0,1,0,0">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseEnter">
                                    <i:EventTrigger.Actions>
                                        <util:ExInvokeCommandAction Command="{Binding MouseEnterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LogItemViewEx}}"/>
                                    </i:EventTrigger.Actions>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeave">
                                    <i:EventTrigger.Actions>
                                        <util:ExInvokeCommandAction Command="{Binding MouseLeaveCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LogItemViewEx}}"/>
                                    </i:EventTrigger.Actions>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <ListView.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                     StartPoint="0.5,0">
                                    <GradientStop Color="AliceBlue"
                                  Offset="0" />
                                    <GradientStop Color="{StaticResource CtlBkColor}"
                                  Offset="1" />
                                </LinearGradientBrush>
                            </ListView.Background>

                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="#" lvcctrl:RangeColumn.MinWidth="50">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <!--<TextBlock TextAlignment="Center" MinWidth="50" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=(ItemsControl.AlternationIndex), Converter={StaticResource IdxDispCvt}}"></TextBlock>-->
                                                <TextBlock TextAlignment="Center" MinWidth="50"
                                           Text="{Binding Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Converter={StaticResource OrdinalConverter}}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn Header="{DynamicResource StrMsgLogDate}" lvcctrl:RangeColumn.MinWidth="120">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type util:LogItem}">
                                                <TextBlock  TextAlignment="Center" 
                                           Text="{Binding DateTime, StringFormat=HH:MM:ss}" VerticalAlignment="Center" HorizontalAlignment="Stretch"></TextBlock>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn Header="{DynamicResource StrMsgLogInfo}" lvcctrl:ProportionalColumn.Width="100">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type util:LogItem}">
                                                <TextBlock Text="{Binding Info}" TextAlignment="Left" HorizontalAlignment="Stretch" >
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="Black"></Setter>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Level}" Value="1">
                                                                    <Setter Property="Foreground" Value="Red"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LoginWnd}">
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="SingleBorderWindow"/>
        <Setter Property="WindowState" Value="Normal"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Title" Value="{DynamicResource StrLoginTitle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Name="grdMain" Background="{StaticResource CtlBkBrush}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*"/>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="../res/logo.png" Width="100" Height="100"  VerticalAlignment="Center" HorizontalAlignment="Center"></Image>
                        <Image Grid.Row="1" Grid.Column="0" Source="../res/key.png"></Image>

                        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"  FontSize="8" HorizontalAlignment="Center">
           <Hyperlink NavigateUri="www.myzygroup.com">myzygroup</Hyperlink>
                        </TextBlock>
                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                            <Button IsDefault="True" Margin="5" Width="80" Height="30" Command="{Binding LoginCmd, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LoginWnd}}" Content="{DynamicResource StrLogin}"></Button>
                            <Button IsCancel="True" Margin="5" Width="80" Content="{DynamicResource StrLoginCancel}"></Button>
                        </StackPanel>

                        <Grid Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Center" Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" FontSize="20" Text="{DynamicResource StrUserName}" Margin="5">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsShowUserName, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LoginWnd}}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Grid.Column="0" Grid.Row="1" FontSize="20" Text="{DynamicResource StrPassword}" Margin="5"></TextBlock>
                            <!--<TextBox Name="tbUserName" Text="{Binding UserName, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LoginWnd}, UpdateSourceTrigger=PropertyChanged}" 
                     Margin="5" Grid.Row="0" Grid.Column="1" VerticalContentAlignment="Center" TextAlignment="Left">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsShowUserName, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LoginWnd}, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>-->
                            <PasswordBox x:Name="tbPassword"  local:PasswordHelper.Attach="True" Width="120"
                         local:PasswordHelper.Password="{Binding Password, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LoginWnd}, UpdateSourceTrigger=PropertyChanged}" 
                         Margin="5" PasswordChar="*" Grid.Row="1" Grid.Column="1"
                         VerticalContentAlignment="Center" HorizontalAlignment="Stretch"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
