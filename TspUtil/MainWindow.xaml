<Window x:Class="TspUtil.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TspUtil"
        xmlns:agCustom="clr-namespace:Elcommon.AgLib;assembly=AgLib"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:lvcctrl="clr-namespace:Itenso.Windows.Controls.ListViewLayout;assembly=AgLib"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:util="clr-namespace:ElCommon.Util;assembly=Util"
        xmlns:avalonDock ="http://schemas.xceed.com/wpf/xaml/avalondock"
        mc:Ignorable="d" Margin="4" Background="{Binding ElementName=mainGrid, Path=Background}"
        Title="MYZY CAMBRIA TOOLS" Height="1047.667" Width="981.334">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AgCustom;component/Themes/AgCustomCommon.xaml" />
                <ResourceDictionary Source="pack://application:,,,/AgCustom;component/Themes/Generic.xaml" />
                <ResourceDictionary Source="afx.xaml"/>
                <ResourceDictionary Source="Resource/localize.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Name="mainGrid" Background="{StaticResource CtlBkBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="0*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" HorizontalAlignment="Right" Margin="0,2,2,2" Width="190">
            <MenuItem Header="{DynamicResource StrWindow}" Width="60">
                <MenuItem Header="{DynamicResource StrWindowLanguage}">
                    <MenuItem Header="English" IsCheckable="True" IsChecked="{Binding Source={StaticResource Locator},Path=Main.IsEnglish}"></MenuItem>
                    <MenuItem Header="中文" IsCheckable="True" IsChecked="{Binding Source={StaticResource Locator},Path=Main.IsChinese}"></MenuItem>
                </MenuItem>
                <MenuItem Header="View">
                    <MenuItem Header="FileManager"></MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{DynamicResource StrOperate}" Width="70">
                <MenuItem Header="{DynamicResource StrOperateServer}" IsCheckable="True" IsChecked="{Binding Path=Main.IsClientConnected, Source={StaticResource Locator}}"/>
                <MenuItem Icon="" Header="{DynamicResource StrOperateClient}" Command="{Binding Main.ServerConnect, Source={StaticResource Locator}}"></MenuItem>
            </MenuItem>

            <MenuItem Header="{DynamicResource StrAbout}" Command="{Binding Source={StaticResource Locator},Path=Main.ReadVersion}" Width="50"></MenuItem>
        </Menu>
        <Menu Grid.Row="1" Background="Transparent" IsEnabled="{Binding Source={StaticResource Locator},Path=Main.OperateEnable}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80"></ColumnDefinition>
                    <ColumnDefinition Width="80"></ColumnDefinition>
                    <ColumnDefinition Width="80"></ColumnDefinition>
                    <ColumnDefinition Width="80"></ColumnDefinition>
                    <ColumnDefinition Width="80"></ColumnDefinition>
                    <ColumnDefinition Width="80"></ColumnDefinition>
                    <ColumnDefinition Width="80"></ColumnDefinition>
                    <ColumnDefinition Width="80"></ColumnDefinition>
                    <ColumnDefinition Width="80"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Button Margin="2" Grid.Column="0" Command="{Binding Main.ProggramNewFile, Source={StaticResource Locator}}">
                    <Button.Content>
                        <StackPanel>
                            <Image Source="Resource/NewFile.png" Height="35"></Image>
                            <TextBlock Text="{DynamicResource StrCreateFile }"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Margin="2" Grid.Column="1" Command="{Binding Main.ProggramAddFile, Source={StaticResource Locator}}">
                    <Button.Content>
                        <StackPanel>
                            <Image Source="Resource/AddFile.png" Height="35"></Image>
                            <TextBlock Text="{DynamicResource StrOpenFile}"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Margin="2" Grid.Column="2" Command="{Binding Main.ProgrammeSaveFile, Source={StaticResource Locator}}">
                    <Button.Content>
                        <StackPanel>
                            <Image Source="Resource/SaveFile.png" Height="35"></Image>
                            <TextBlock Text="{DynamicResource StrSaveFile}"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Margin="2" Grid.Column="3" Command="{Binding Main.ProggramDownLoadFile, Source={StaticResource Locator}}" IsEnabled="{Binding Main.EnableBtn,Source={StaticResource Locator}}">
                    <Button.Content>
                        <StackPanel>
                            <Image Source="Resource/DeviceLoad.png" Height="35"></Image>
                            <TextBlock Text="{DynamicResource StrWriteFile}"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>

                <Button Margin="2" Grid.Column="4" Command="{Binding Main.ProggramSendSingle, Source={StaticResource Locator}}">
                    <Button.Content>
                        <StackPanel>
                            <Image Source="Resource/Line.png" Height="35"></Image>
                            <TextBlock Text="{DynamicResource StrExeOne}"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Margin="2" Grid.Column="5" Command="{Binding Main.ProggramSendALl, Source={StaticResource Locator}}">
                    <Button.Content>
                        <StackPanel>
                            <Image Source="Resource/Online.png" Height="35"></Image>
                            <TextBlock Text="{DynamicResource StrExeAll}"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Margin="2" Grid.Column="6"
                        IsEnabled="{Binding Main.NextEnable,Source={StaticResource Locator}}"
                        Command="{Binding Main.ExecuteNextLine, Source={StaticResource Locator}}">
                    <Button.Content>
                        <StackPanel>
                            <Image Source="Resource/Continue.png" Height="35"></Image>
                            <TextBlock Text="{DynamicResource StrExeContinue}"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Margin="2" Grid.Column="7" Command="{Binding Main.ReadNextLine, Source={StaticResource Locator}}">
                    <Button.Content>
                        <StackPanel>
                            <Image Source="Resource/ReadFromDev.png" Height="35"></Image>
                            <TextBlock Text="{DynamicResource StrReadFile}"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Margin="2" Grid.Column="8" Command="{Binding Main.KeyBinding, Source={StaticResource Locator}}">
                    <Button.Content>
                        <StackPanel>
                            <Image Source="Resource/KeyBinding.png" Height="35"></Image>
                            <TextBlock Text="{DynamicResource StrKeyBind}"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>
            </Grid>
        </Menu>
        <StatusBar Grid.Row="4" Margin="15,5,6,5">
            <!--<StatusBarItem>
                <WrapPanel>
                    <TextBlock Text="服务器:"></TextBlock>
                    <TextBlock Text="{Binding Vm.IpAddress, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}"></TextBlock>
                </WrapPanel>
            </StatusBarItem>-->

            <StatusBarItem>
                <WrapPanel>
                    <TextBlock Text="{Binding Main.Port, Source={StaticResource Locator}}"></TextBlock>
                </WrapPanel>
            </StatusBarItem>

            <StatusBarItem HorizontalAlignment="Center">
                <WrapPanel>
                    <TextBlock Text="{DynamicResource StrDeviceState}"></TextBlock>
                    <TextBlock Text="{DynamicResource StrClient}"></TextBlock>
                    <Ellipse Width="15" Height="15">
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Setter Property="Fill" Value="Green"/>
                                <Style.Triggers>
                                    <DataTrigger Value="false" Binding="{Binding Main.IsClientConnected, Source={StaticResource Locator}}">
                                        <Setter Property="Fill" Value="Red"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                    <!--<TextBlock Text="{Binding Vm.IsClientConnected, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}"></TextBlock>-->
                    <TextBlock Text="  "></TextBlock>
                    <TextBlock Text="{DynamicResource StrServer}"></TextBlock>
                    <Ellipse Width="15" Height="15">
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Setter Property="Fill" Value="Green"/>
                                <Style.Triggers>
                                    <DataTrigger Value="false" Binding="{Binding Main.IsServerConnected, Source={StaticResource Locator}}">
                                        <Setter Property="Fill" Value="Red"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                    <!--<TextBlock  Text="{Binding Vm.IsServerConnected, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}"></TextBlock>-->
                </WrapPanel>
            </StatusBarItem>

            <StatusBarItem HorizontalAlignment="Right" Background="{StaticResource CtlBkBrush}">
                <WrapPanel>
                    <TextBlock Text="{DynamicResource StrSendState}" VerticalAlignment="Center"></TextBlock>
                    <ProgressBar Maximum="{Binding Main.Maximum, Mode=OneTime, Source={StaticResource Locator}}" Value="{Binding Main.ProgressData, Source={StaticResource Locator}}"   HorizontalAlignment="Left" Height="10" Grid.Row="2" VerticalAlignment="Center" Width="150"/>
                </WrapPanel>
            </StatusBarItem>
            <StatusBar>
                <TextBlock Text="{Binding Main.ProgressData, Mode=OneWay, Source={StaticResource Locator}}" Width="24"></TextBlock> %
            </StatusBar>
            <StatusBarItem>
                <TextBlock Text="{Binding Main.CurProgmFile, Mode=OneWay, Source={StaticResource Locator}}" Width="auto"></TextBlock>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="{Binding Main.SwVersion, Mode=OneWay, Source={StaticResource Locator}, StringFormat={}VER : {0:}}" MinWidth="80"></TextBlock>
            </StatusBarItem>
        </StatusBar>

        <TabControl Grid.Row="2" HorizontalAlignment="Stretch" SelectionChanged="TablePanel_Selected" HorizontalContentAlignment="Stretch">

            <TabItem Header="{DynamicResource StrPic}" >
                <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="Blue" BorderThickness="1">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <!--<RowDefinition Height="150"/>-->
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="450"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <GridSplitter Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" VerticalAlignment="Stretch"  HorizontalAlignment="Right"  Width="2"></GridSplitter>
                        <!--<GridSplitter Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="2"></GridSplitter>-->
                        <!--<ScrollViewer  Name="LogScrollPic" SizeChanged="FrameLog_OnSizeChange">

                        </ScrollViewer>-->
                        <!--<agCustom:LogItemViewEx AutoScrollItems="True" AutoScrollLevel="10000" Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0" Margin="0,2" BorderBrush="Black" MsgLogItems="{Binding Main.LogItems, Source={StaticResource Locator}}"/>-->

                        <!--<agCustom:LogItemViewEx Margin="0,2" AutoScrollLevel="1" MsgLogItems="{Binding Vm.LogItems, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}"/>-->

                        <Grid Grid.Row="0" Grid.Column="0" Margin="2"
                              IsEnabled="{Binding Main.PanelUnLock, Source={StaticResource Locator}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="91*"/>
                                <ColumnDefinition Width="355*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="60"></RowDefinition>
                            </Grid.RowDefinitions>

                            <ListView Margin="2,2,0,2" HorizontalContentAlignment="Stretch" 
                                  lvcctrl:ListViewLayoutManager.Enabled="True" Name="imgItemCtls"
                                  ItemsSource="{Binding Main.ImgItemInfos, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"
                                  Grid.ColumnSpan="2"
                                  AllowDrop="True"
                                  SelectionMode="Extended">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <util:ExInvokeCommandAction Command="{Binding Main.ImgItemSelectionChangedCmd, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=imgItemCtls, Path=SelectedItem}"></util:ExInvokeCommandAction>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <util:ExInvokeCommandAction Command="{Binding Main.ImgItemSelectionChangedCmd, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=imgItemCtls, Path=SelectedItem}"></util:ExInvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="#" lvcctrl:RangeColumn.MinWidth="50">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type local:ImgItemInfo}">
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock TextAlignment="Center" MinWidth="20"
                                                           Text="{Binding Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Converter={StaticResource OrdinalConverter}}" />
                                                        <Grid  VerticalAlignment="Stretch" MinWidth="30" Margin="2">
                                                            <Grid.Style>
                                                                <Style TargetType="{x:Type Grid}">
                                                                    <Setter Property="Background" Value="{x:Null}"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding ImgOpState}" Value="{x:Static local:ImgOpState.Success}">
                                                                            <Setter Property="Background" Value="Green"></Setter>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding ImgOpState}" Value="{x:Static local:ImgOpState.Fail}">
                                                                            <Setter Property="Background" Value="Red"></Setter>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Grid.Style>
                                                        </Grid>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="{DynamicResource StrPicActive}" lvcctrl:FixedColumn.Width="40" Width="40">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type local:ImgItemInfo}">
                                                    <Grid  HorizontalAlignment="Center">
                                                        <CheckBox IsEnabled="False" IsChecked="{Binding IsActived, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalContentAlignment="Center"></CheckBox>
                                                    </Grid>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="{DynamicResource StrPicFileName}" lvcctrl:RangeColumn.MinWidth="80">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type local:ImgItemInfo}">
                                                    <TextBlock  TextAlignment="Center" 
                                                            Text="{Binding Des, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Stretch"></TextBlock>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="{DynamicResource StrPicCheckSum}" lvcctrl:RangeColumn.MinWidth="80">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type local:ImgItemInfo}">
                                                    <TextBox  TextAlignment="Center" 
                                                              Text="{Binding Cs, UpdateSourceTrigger=PropertyChanged}" MinWidth="60" VerticalAlignment="Center" HorizontalAlignment="Stretch"></TextBox>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="{DynamicResource StrPicPath}" lvcctrl:ProportionalColumn.Width="100" Width="50">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type local:ImgItemInfo}">
                                                    <Grid>
                                                        <TextBlock Text="{Binding FnPath, UpdateSourceTrigger=PropertyChanged}" IsHyphenationEnabled="True"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>

                            <UniformGrid Grid.Row="1" Rows="2" Margin="5,4,5,5" Background="{StaticResource CtlBkBrush}" Grid.ColumnSpan="2">
                                <UniformGrid.Resources>
                                    <Style TargetType="Button">
                                        <Setter Property="Width" Value="80"></Setter>
                                    </Style>
                                </UniformGrid.Resources>
                                <Button Margin="3" Command="{Binding Main.OpenFdClearCmd, Source={StaticResource Locator}}" Content="{DynamicResource StrPicFileClear}"></Button>
                                <Button Margin="3" Command="{Binding Main.OpenFdCmd, Source={StaticResource Locator}}" Content="{DynamicResource StrPicFileOpen}"></Button>
                                <Button Margin="3" Command="{Binding Main.SendItemsCmd, Source={StaticResource Locator}}" Content="NAND"></Button>
                                <Button Margin="3" Command="{Binding Main.SendToDDR, Source={StaticResource Locator}}">DDR</Button>
                                <Button Margin="3" Command="{Binding Main.ItemsMoveUp, Source={StaticResource Locator}}" Content="{DynamicResource StrPicFileMoveUp}"></Button>
                                <Button Margin="3" Command="{Binding Main.ItemsMoveDown, Source={StaticResource Locator}}" Content="{DynamicResource StrPicFileMoveDown}"></Button>
                                <Button Margin="3" Command="{Binding Main.PowerOnDevice, Source={StaticResource Locator}}" Content="{DynamicResource StrPicDeviceOn}"></Button>
                                <Button Margin="3" Command="{Binding Main.PowerOffDevice, Source={StaticResource Locator}}" Content="{DynamicResource StrPicDeviceOff}"></Button>
                            </UniformGrid>
                            <UniformGrid Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0" Margin="0,28,0,1" Grid.RowSpan="2">
                                <ListBox Background="{StaticResource CtlBkBrush}" 
                                         ItemsSource="{Binding Main.ViewClients, Source={StaticResource Locator}}"
                                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                         Name="Item" Margin="0,29,0,0">

                                    <!--<i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <util:ExInvokeCommandAction Command="{Binding Vm.SelectionChangedCmd, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" CommandParameter="{Binding ElementName=Item, Path=SelectedItem}">
                                            </util:ExInvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>-->


                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel IsItemsHost="True"></WrapPanel>
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.Resources>
                                                    <Style TargetType="Grid">
                                                        <Setter Property="Background" Value="{x:Null}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsOffLine}" Value="True">
                                                                <Setter Property="Grid.Background" Value="Red"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Resources>
                                                <TextBlock Grid.Column="0" Text="{Binding ClientId}"></TextBlock>
                                                <TextBlock Grid.Column="1" Text="{Binding ClientIp}"></TextBlock>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="50"></ColumnDefinition>
                                                    <ColumnDefinition Width="200"></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </UniformGrid>
                        </Grid>
                        <Grid  Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch" Background="{StaticResource CtlBkBrush}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" MinHeight="30"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{Binding Main.ActiveFn, Source={StaticResource Locator}}" FontSize="16" Margin="5" FontStyle="Italic" Foreground="DeepSkyBlue">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource IsStringEmptyConverter}}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <Grid Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                <Image Source="{Binding Main.ImgSource, Source={StaticResource Locator}}"
                                   Stretch="Uniform"></Image>
                            </Grid>
                        </Grid>
                    </Grid>
                </Border>
            </TabItem>

            <TabItem Header="{DynamicResource StrConfig}" Background="{StaticResource CtlBkBrush}" Height="21" VerticalAlignment="Top">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <Grid Background="{StaticResource CtlBkBrush}" Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Margin" Value="2"></Setter>
                                <Setter Property="Width" Value="80"></Setter>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                            <Style TargetType="xctk:IntegerUpDown">
                                <Setter Property="Margin" Value="5"></Setter>
                                <Setter Property="Width" Value="200"></Setter>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                            <Style TargetType="TextBox">
                                <Setter Property="Margin" Value="2"></Setter>
                                <Setter Property="Width" Value="200"></Setter>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="Margin" Value="5"></Setter>
                                <Setter Property="Width" Value="200"></Setter>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </Grid.Resources>
                        <StackPanel Grid.Row="0" Grid.Column="0" Background="{StaticResource CtlBkBrush}">
                            <GroupBox>
                                <GroupBox.Header>
                                    <CheckBox IsChecked="{Binding Main.IsNetWorkSend, Source={StaticResource Locator}}" Content="{DynamicResource StrConfigPicNet}"></CheckBox>
                                </GroupBox.Header>
                                <StackPanel IsEnabled="{Binding Main.IsNetWorkSend, Source={StaticResource Locator}}">
                                    <Expander Header="{DynamicResource StrConfigPicRatio}" IsExpanded="True">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="H(byte): "></TextBlock>
                                            <TextBlock Grid.Column="0" Grid.Row="1" Text="V(line): "></TextBlock>
                                            <xctk:IntegerUpDown Grid.Column="1" Grid.Row="0" Minimum="0" Value="{Binding Main.ExpPixWidth, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"></xctk:IntegerUpDown>
                                            <xctk:IntegerUpDown Grid.Column="1" Grid.Row="1" Minimum="0" Value="{Binding Main.ExpPixHeight, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"></xctk:IntegerUpDown>
                                        </Grid>
                                    </Expander>
                                    <Expander Header="{DynamicResource StrConfigPicByte}" IsExpanded="True">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50"/>
                                                <ColumnDefinition Width="110"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <Grid.Resources>
                                                <Style TargetType="ItemsControl">
                                                    <Setter Property="ItemTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate DataType="local:MaskForArgbItem">
                                                                <Grid Margin="2,10" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto"/>
                                                                        <RowDefinition Height="Auto"/>
                                                                    </Grid.RowDefinitions>


                                                                    <TextBox Grid.Row="0" Grid.Column="0" Width="100"  Text="{Binding ExpRGBA}" VerticalAlignment="Center" HorizontalAlignment="Left"></TextBox>
                                                                </Grid>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>

                                                    <Setter Property="ItemsPanel">
                                                        <Setter.Value>
                                                            <ItemsPanelTemplate>
                                                                <UniformGrid Rows="1"></UniformGrid>
                                                            </ItemsPanelTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>

                                            </Grid.Resources>

                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="{DynamicResource StrConfigPicByteOdd}"></TextBlock>
                                            <TextBlock Grid.Column="0" Grid.Row="1" Text="{DynamicResource StrConfigPicByteEven}"></TextBlock>


                                            <TextBox Grid.Column="1" Grid.Row="0" Width="100" VerticalAlignment="Center" Text="{Binding Main.OddOffset, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:D1}}"></TextBox>
                                            <ItemsControl Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" ItemsSource="{Binding Main.OddMaskArgb, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"></ItemsControl>
                                            <TextBox Grid.Column="1" Grid.Row="1" Width="100" VerticalAlignment="Center" Text="{Binding Main.EvenOffset, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:D1}}"></TextBox>
                                            <ItemsControl Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" ItemsSource="{Binding Main.EvenMaskArgb, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"></ItemsControl>

                                        </Grid>
                                    </Expander>
                                    <Expander Header="{DynamicResource StrConfigPicFill}" IsExpanded="True">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="{DynamicResource StrConfigPicFLoc}"></TextBlock>
                                            <TextBlock Grid.Column="0" Grid.Row="1" Text="{DynamicResource StrConfigPicFData}"></TextBlock>
                                            <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Source={StaticResource PadLocModeProvider}}" 
                                              SelectedValue="{Binding Main.PadLoc, Source={StaticResource Locator}}"
                                              SelectedValuePath="Val"
                                              DisplayMemberPath="Des">
                                            </ComboBox>
                                            <xctk:WatermarkTextBox Grid.Column="1" Grid.Row="1" Watermark="FF" Text="{Binding Main.PadStr, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                        </Grid>
                                    </Expander>
                                    <Expander Header="{DynamicResource StrConfigPicOther}" IsExpanded="True">
                                        <Grid Height="261">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="30px"></RowDefinition>
                                                <RowDefinition Height="30px"></RowDefinition>
                                                <RowDefinition Height="30px"></RowDefinition>
                                                <RowDefinition Height="30px"></RowDefinition>
                                                <RowDefinition Height="30px"></RowDefinition>
                                                <RowDefinition Height="30px"></RowDefinition>
                                                <RowDefinition Height="30px"></RowDefinition>
                                                <RowDefinition Height="30px"></RowDefinition>
                                                <RowDefinition Height="30px"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <CheckBox VerticalAlignment="Center" Grid.Row="0" IsChecked="{Binding Main.IsInverse, Source={StaticResource Locator}}" Content="{DynamicResource StrConfigPicOtherReverse}"></CheckBox>
                                            <CheckBox VerticalAlignment="Center" Grid.Row="1" IsChecked="{Binding Main.HighLowBytesRevert, Source={StaticResource Locator}}" Content="{DynamicResource StrConfigPicOtherReverseHigh}"></CheckBox>
                                            <CheckBox VerticalAlignment="Center" Grid.Row="2" IsChecked="{Binding Main.IsAddSizeToHeader, Source={StaticResource Locator}}" Content="{DynamicResource StrConfigPicOtherHeaderInclude}"></CheckBox>
                                            <CheckBox VerticalAlignment="Center" Grid.Row="3" IsChecked="{Binding Main.UsinSimData, Source={StaticResource Locator}}" Content="{DynamicResource StrConfigPicOtherSimData}"></CheckBox>
                                            <CheckBox VerticalAlignment="Center" Grid.Row="4" IsChecked="{Binding Main.IsCalculateChecksum, Source={StaticResource Locator}}" Content="{DynamicResource StrConfigPicOtherData}"></CheckBox>
                                            <CheckBox VerticalAlignment="Center" Grid.Row="5" IsChecked="{Binding Main.IsCrossData, Source={StaticResource Locator}}" Content="{DynamicResource StrConfigPicOtherPixelCross}"></CheckBox>
                                            <CheckBox VerticalAlignment="Center" Grid.Row="6" IsChecked="{Binding Main.IsInferiorData, Source={StaticResource Locator}}" Content="{DynamicResource StrConfigPicOtherPictureRevise}"></CheckBox>
                                            <TextBlock Grid.Row="6" Margin="102,7,132,7" Width="Auto" RenderTransformOrigin="0.5,0.5" Text="{DynamicResource StrConfigPicOtherPictureReviseFill}"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="6" Watermark="FF" Text="{Binding Main.RegsTxt, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Margin="173,0,0,0">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <CheckBox VerticalAlignment="Center" Grid.Row="7" IsChecked="{Binding Main.IsChooseDisplay,Source={StaticResource Locator}}" Content="{DynamicResource StrConfigPicOtherPixelSynDisplay}"></CheckBox>
                                            <CheckBox VerticalAlignment="Center" Grid.Row="8" IsChecked="{Binding Main.IsPictureReArang,Source={StaticResource Locator}}" Content="{DynamicResource StrConfigPicOtherOneToFour}"></CheckBox>
                                        </Grid>
                                    </Expander>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="1" Visibility="Collapsed">
                            <GroupBox>
                                <GroupBox.Header>
                                    <CheckBox IsChecked="{Binding Main.IsSerialSend,Source={StaticResource Locator}}">串口发送</CheckBox>
                                </GroupBox.Header>
                                <StackPanel IsEnabled="{Binding Main.IsSerialSend,Source={StaticResource Locator}}">
                                    <Expander Header="串口设置" IsExpanded="True">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="30px"></RowDefinition>
                                                <RowDefinition Height="30px"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="串口号：" Grid.Row="0" Grid.Column="0"></TextBlock>
                                            <TextBlock Text="波特率：" Grid.Row="1" Grid.Column="0"></TextBlock>
                                            <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Main.SerialComs, Source={StaticResource Locator}}" 
                                              SelectedValue="{Binding Main.SelectCom, Source={StaticResource Locator}}"
                                              SelectedValuePath="Val"
                                              DisplayMemberPath="Des"></ComboBox>
                                            <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Main.SerialSpeed, Source={StaticResource Locator}}" 
                                              SelectedValue="{Binding Main.SelectSpeed, Source={StaticResource Locator}}"
                                              SelectedValuePath="Val"
                                              DisplayMemberPath="Des"></ComboBox>
                                        </Grid>
                                    </Expander>
                                    <Expander Header="空余填补" IsExpanded="True">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" Text="数据："></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="0" Grid.Column="1" Watermark="FF" Text="{Binding Main.PadStr, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,-206,0">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                        </Grid>

                                    </Expander>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left">
                            <GroupBox Height="auto" Width="580">
                                <GroupBox.Header>
                                    <CheckBox IsChecked="{Binding Main.IsNetWorkSend,Source={StaticResource Locator}}" Content="{DynamicResource StrConfigProgramNet}"></CheckBox>
                                </GroupBox.Header>
                                <StackPanel IsEnabled="{Binding Main.IsNetWorkSend,Source={StaticResource Locator}}">
                                    <Expander Header="{DynamicResource StrConfigProgramTemp}" IsExpanded="True" Height="auto">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="10"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="10"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="10"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="10"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" Name="PWONIOVCC" Text="PWONIOVCC:" Margin="2,4,0,4" Width="Auto"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="0" Watermark="20" Text="{Binding Main.PwonIovccParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="0" Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=PWONIOVCC, Path=Text}" Grid.Column="2" Margin="50,0,0,0" HorizontalAlignment="Left" Width="60" >send</Button>
                                            <TextBlock Grid.Row="1" Grid.Column="0" Name="PWONVSP" Text="PWONVSP/VSN:" Margin="2,4,0,4" Width="Auto"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="1" Watermark="20" Text="{Binding Main.PwonVspParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" TextChanged="WatermarkTextBox_TextChanged" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="1"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=PWONVSP, Path=Text}" Grid.Column="2" Margin="50,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>
                                            <TextBlock Grid.Row="2" Grid.Column="0" Name="PWONRESX" Text="PWONRESX:" Margin="2,4,0,4" Width="Auto"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="2" Watermark="20" Text="{Binding Main.PwonResxParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="2"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=PWONRESX, Path=Text}" Grid.Column="2" Margin="50,0,0,0" HorizontalAlignment="Left" Width="60" >send</Button>

                                            <TextBlock Grid.Row="0" Grid.Column="3" Name="PWOFFIOVCC" Text="PWOFFIOVCC:" Width="Auto"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="0" Grid.Column="4" Watermark="20" Text="{Binding Main.PwoffIovccParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="150" >
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="0"  Grid.Column="5" Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=PWOFFIOVCC, Path=Text}" Margin="84,0,-62,0" HorizontalAlignment="Left" Width="60" >send</Button>
                                            <TextBlock Grid.Row="1" Grid.Column="3" Name="PWOFFVSP" Text="PWOFFVSP/VSN:" Margin="2,4,0,4" Width="Auto"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="1" Grid.Column="4" Watermark="20" Text="{Binding Main.PwoffVspParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" TextChanged="WatermarkTextBox_TextChanged" HorizontalAlignment="Left" Width="150" >
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="1"  Grid.Column="5" Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=PWOFFVSP, Path=Text}" Margin="84,0,-48,0" HorizontalAlignment="Left" Width="59" >send</Button>
                                            <TextBlock Grid.Row="2" Grid.Column="3" Name="PWOFFRESX" Text="PWOFFRESX:" Margin="2,4,0,4" Width="Auto"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="2"  Grid.Column="4" Watermark="20" Text="{Binding Main.PwoffResxParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="150">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="2" Grid.Column="5" Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=PWOFFRESX, Path=Text}"  Margin="84,0,-58,0" HorizontalAlignment="Left" Width="60" >send</Button>



                                            <TextBlock Grid.Row="3" Name="BRIGHT" Grid.Column="0" Text="BRIGHT:" Margin="2,4,0,4" Width="Auto"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="3" Watermark="1-100%" Text="{Binding Main.BrightParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="3"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=BRIGHT, Path=Text}" Grid.Column="2" Margin="50,0,0,0" HorizontalAlignment="Left" Width="60" >send</Button>
                                            <TextBlock Grid.Row="5" Name="PLL" Grid.Column="0" Text="PLL:" Margin="2,4,0,4" Width="24" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="5" Watermark="1070" Text="{Binding Main.PllParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="4"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=PLL, Path=Text}" Grid.Column="2" Margin="50,6,0,4" HorizontalAlignment="Left" Width="60" Grid.RowSpan="2" >send</Button>
                                            <TextBlock Grid.Row="7" Grid.Column="0" Name="REGB6" Text="REG_B6:" Margin="2,4,0,4" Width="47" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="7" Watermark="0XF027" Text="{Binding Main.Regb6Param, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="7"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=REGB6, Path=Text}" Grid.Column="2" Margin="51,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>
                                            <TextBlock Grid.Row="8" Grid.Column="0" TextWrapping="WrapWithOverflow" Name="REGD6" Text="REG_D6:" Margin="2,4,0,4" Width="49" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="8" Watermark="0X01FD" Text="{Binding Main.Regd6Param, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="8"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=REGD6, Path=Text}" Grid.Column="2" Margin="51,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>
                                            <TextBlock Grid.Row="9" Grid.Column="0" Name="REGDE" Text="REG_DE:" Margin="2,4,0,4" Width="49" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="9" Watermark="0X003A" Text="{Binding Main.RegdeParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="9"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=REGDE, Path=Text}" Grid.Column="2" Margin="51,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>

                                            <TextBlock Grid.Row="11" Grid.Column="0" Name="PANELB6" Text="PANEL_B6:" Margin="2,4,0,4" Width="62" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="11" Watermark="0X0091" Text="{Binding Main.Panelb6Param, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="10"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=PANELB6, Path=Text}" Grid.Column="2" Margin="51,6,0,4" HorizontalAlignment="Left" Width="59" Grid.RowSpan="2" >send</Button>
                                            <TextBlock Grid.Row="12" Grid.Column="0" Name="FPGAPCLK" Text="FPGA_PCLK:" Margin="2,4,0,4" Width="72" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="12" Watermark="140" Text="{Binding Main.FpgaPclk, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Margin="95,0,0,0" Grid.ColumnSpan="3" HorizontalAlignment="Left" Width="121">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="12"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=PANELB6, Path=Text}" Grid.Column="2" Margin="51,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>

                                            <TextBlock Grid.Row="14" Grid.Column="0" Name="VSA" Text="VSA:" Margin="2,4,0,4" Width="62" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="14" Watermark="1" Text="{Binding Main.VsaParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="14"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=VSA, Path=Text}" Grid.Column="2" Margin="51,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>

                                            <TextBlock Grid.Row="15" Grid.Column="0" Name="HAS" Text="HSA:" Margin="2,4,0,4" Width="62" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="15" Watermark="1" Text="{Binding Main.HasParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="15"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=HAS, Path=Text}" Grid.Column="2" Margin="51,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>
                                            <TextBlock Grid.Row="16" Grid.Column="0" Name="VFP" Text="VFP:" Margin="2,4,0,4" Width="62" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="16" Watermark="286" Text="{Binding Main.VfpParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="16"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=VFP, Path=Text}" Grid.Column="2" Margin="51,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>
                                            <TextBlock Grid.Row="17" Grid.Column="0" Name="HFP" Text="HFP:" Margin="2,4,0,4" Width="62" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="17" Watermark="30" Text="{Binding Main.HfpParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="17"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=HFP, Path=Text}" Grid.Column="2" Margin="51,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>
                                            <TextBlock Grid.Row="18" Grid.Column="0" Name="VBP" Text="VBP:" Margin="2,4,0,4" Width="62" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="18" Watermark="14" Text="{Binding Main.VbpParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="18"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=VBP, Path=Text}" Grid.Column="2" Margin="51,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>
                                            <TextBlock Grid.Row="19" Grid.Column="0" Name="HBP" Text="HBP:" Margin="2,4,0,4" Width="62" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="19" Watermark="20" Text="{Binding Main.HbpParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="19"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=HBP, Path=Text}" Grid.Column="2" Margin="51,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>
                                            <TextBlock Grid.Row="20" Grid.Column="0" Name="VACT" Text="VACT:" Margin="2,4,0,4" Width="62" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="20" Watermark="1920" Text="{Binding Main.VactParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="20"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=VACT, Path=Text}" Grid.Column="2" Margin="51,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>
                                            <TextBlock Grid.Row="21" Grid.Column="0" Name="HACT" Text="HACT:" Margin="2,4,0,4" Width="62" HorizontalAlignment="Left"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="21" Watermark="1824" Text="{Binding Main.HactParam, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="120" Grid.Column="1">
                                                <i:Interaction.Behaviors>
                                                    <util:RegexTextBoxBehavior InputRegex="{StaticResource RegexHexStr}"/>
                                                </i:Interaction.Behaviors>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Row="21"  Command="{Binding Main.SendFromTextBox, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=HACT, Path=Text}" Grid.Column="2" Margin="51,0,0,0" HorizontalAlignment="Left" Width="59" >send</Button>
                                            <TextBlock Grid.Row="22" Grid.Column="0" Text="Normal:" Margin="0,2" Width="50" HorizontalAlignment="Left"></TextBlock>
                                            <RadioButton Grid.Row="22" Grid.Column="0" Margin="0,2,0,0" HorizontalAlignment="Right" IsChecked="{Binding Main.Normal,Source={StaticResource Locator}}" Width="42"></RadioButton>
                                            <TextBlock Grid.Row="22" Grid.Column="1" Text="DSCMode:" Margin="0,2" Width="61" HorizontalAlignment="Left"></TextBlock>
                                            <RadioButton Grid.Row="22" Grid.Column="1" Margin="70,2,0,0" HorizontalAlignment="Right" IsChecked="{Binding Main.DscMode,Source={StaticResource Locator}}"></RadioButton>
                                            <TextBlock Grid.Row="22" Grid.Column="2" Text="Ext_DSCMode:" Margin="0,2" Width="82" HorizontalAlignment="Left"></TextBlock>
                                            <RadioButton Grid.Row="22" Grid.Column="2" Margin="50,2,0,0" HorizontalAlignment="Right" IsChecked="{Binding Main.Ext_DscMode,Source={StaticResource Locator}}"></RadioButton>
                                            <Button Grid.Row="23" Grid.Column="0" Content="{DynamicResource StrConfigProgramSyn}" Margin="2" Command="{Binding Source={StaticResource Locator},Path=Main.DataSynchronize}"></Button>
                                            <xctk:WatermarkTextBox Grid.Column="1" Grid.Row="23" Watermark="1" Text="{Binding Source={StaticResource Locator},Path=Main.ReadLen}"></xctk:WatermarkTextBox>
                                        </Grid>

                                    </Expander>
                                    <Expander Header="{DynamicResource StrConfigProgramConfig}" IsExpanded="True" IsEnabled="{Binding Main.IsNetWorkSend,Source={StaticResource Locator}}" Height="auto">
                                        <Grid Height="auto">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource StrConfigProgramConfigTimes}"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="0" Grid.Column="1" Width="150" HorizontalAlignment="Left" Text="{Binding Main.WantToExeCount,Source={StaticResource Locator}}"></xctk:WatermarkTextBox>
                                            <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource StrConfigProgramConfigFileNum}"></TextBlock>
                                            <xctk:WatermarkTextBox Grid.Row="1" Grid.Column="1" Width="150" HorizontalAlignment="Left" Text="{Binding Main.FileIndex,Source={StaticResource Locator}}"></xctk:WatermarkTextBox>
                                        </Grid>
                                    </Expander>
                                </StackPanel>
                                <!---->
                            </GroupBox>
                        </StackPanel>
                    </Grid>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="{DynamicResource StrProgram}" Background="{StaticResource CtlBkBrush}">
                <Grid Background="{StaticResource CtlBkBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                   
                    <avalonDock:DockingManager DocumentClosing="DockingManager_OnDocumentClosing" x:Name="DockingManager" Grid.Column="0">
                        <avalonDock:LayoutRoot PropertyChanged="OnLayoutRootPropertyChanged">
                            <avalonDock:LayoutPanel Orientation="Horizontal">
                                <!--<avalonDock:LayoutAnchorablePane DockWidth="100">
                                    <avalonDock:LayoutAnchorable x:Name="WinFormsWindow" FloatingHeight="200" ContentId="FileManager" Title="BuildWindow Window" CanHide="False" CanClose="False" >
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="40"></RowDefinition>
                                                <RowDefinition Height="40"></RowDefinition>
                                                <RowDefinition Height="40"></RowDefinition>
                                                <RowDefinition Height="40"></RowDefinition>
                                                <RowDefinition Height="40"></RowDefinition>
                                                <RowDefinition Height="40"></RowDefinition>
                                                <RowDefinition Height="40"></RowDefinition>
                                                <RowDefinition Height="40"></RowDefinition>
                                                <RowDefinition Height="40"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Button Margin="8" Grid.Row="0" Content="编译文件" Command="{Binding Main.ProggramFile, Source={StaticResource Locator}}"></Button>
                                            <Button Margin="8" Grid.Row="1" Content="下载文件" Command="{Binding Main.ProggramDownLoadFile, Source={StaticResource Locator}}" IsEnabled="{Binding Main.EnableBtn,Source={StaticResource Locator}}"></Button>
                                            <Button Margin="8" Grid.Row="2" Content="导出文件" Command="{Binding Main.ProggramOutPutFile, Source={StaticResource Locator}}"></Button>
                                            <Button Margin="8" Grid.Row="3" Content="单行执行" Command="{Binding Main.ProggramSendSingle, Source={StaticResource Locator}}"></Button>
                                            <Button Margin="8" Grid.Row="4" Content="在线执行" Command="{Binding Main.ProggramSendALl, Source={StaticResource Locator}}"></Button>
                                            <Button Margin="8" Grid.Row="5" Content="继续执行" IsEnabled="{Binding Main.NextEnable,Source={StaticResource Locator}}" Command="{Binding Main.ExecuteNextLine, Source={StaticResource Locator}}"></Button>
                                            <Button Margin="8" Grid.Row="6" Content="读取文件" Command="{Binding Main.ReadNextLine, Source={StaticResource Locator}}"></Button>
                                        </Grid>
                                    </avalonDock:LayoutAnchorable>
                                </avalonDock:LayoutAnchorablePane>-->
                                <avalonDock:LayoutDocumentPaneGroup>
                                    <avalonDock:LayoutDocumentPane x:Name="LayoutDocumentPane" PropertyChanged="LayoutDocumentPane_OnPropertyChanged">
                                    </avalonDock:LayoutDocumentPane>
                                </avalonDock:LayoutDocumentPaneGroup>
                                <avalonDock:LayoutAnchorablePaneGroup DockWidth="360">
                                    <avalonDock:LayoutAnchorablePane>
                                        <avalonDock:LayoutAnchorable CanAutoHide="True" ContentId="File" Title="FileManager" Hiding="OnToolWindow1Hiding" CanHide="False" CanClose="False">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"></RowDefinition>
                                                    <RowDefinition Height="auto"></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <ListView Grid.Row="0"  IsEnabled="{Binding Main.FileManaEnable,Source={StaticResource Locator}}" SelectionMode="Extended"
                              ItemsSource="{Binding Main.ProgrammeFiles, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"
                                Name="programFilesMana">
                                                    <i:Interaction.Triggers>
                                                       <i:EventTrigger EventName="MouseDoubleClick">
                                                            <util:ExInvokeCommandAction Command="{Binding Main.FileItemSelectedChange, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=programFilesMana, Path=SelectedItem}"></util:ExInvokeCommandAction>
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="IsVisible">

                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <ListView.View>
                                                        <GridView>
                                                            <GridViewColumn Header="{DynamicResource StrProgramCompileNum}" lvcctrl:ProportionalColumn.Width="100" Width="100">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate DataType="{x:Type local:ImgItemInfo}">
                                                                        <Grid>
                                                                            <TextBlock Text="{Binding FileIndex, UpdateSourceTrigger=PropertyChanged}" IsHyphenationEnabled="True"/>
                                                                        </Grid>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>
                                                          
                                                           

                                                            <GridViewColumn Header="{DynamicResource StrPicFileName}" lvcctrl:RangeColumn.MinWidth="100" Width="60">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate DataType="{x:Type local:ImgItemInfo}">
                                                                        <TextBlock  TextAlignment="Center" 
                                                                                    Text="{Binding Des, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Stretch"></TextBlock>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>

                                                            <GridViewColumn Header="{DynamicResource StrProgramCheckSum}" lvcctrl:RangeColumn.MinWidth="80" Width="70">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate DataType="{x:Type local:ImgItemInfo}">
                                                                        <TextBox  TextAlignment="Center" 
                                                                                  Text="{Binding Cs, UpdateSourceTrigger=PropertyChanged}" MinWidth="60" VerticalAlignment="Center" HorizontalAlignment="Stretch"></TextBox>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>

                                                            <GridViewColumn Header="{DynamicResource StrProgramFilePath}" lvcctrl:ProportionalColumn.Width="100" Width="50">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate DataType="{x:Type local:ImgItemInfo}">
                                                                        <Grid>
                                                                            <TextBlock Text="{Binding FnPath, UpdateSourceTrigger=PropertyChanged}" IsHyphenationEnabled="True"/>
                                                                        </Grid>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>
                                                            <GridViewColumn Header="#" lvcctrl:RangeColumn.MinWidth="50">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate DataType="{x:Type local:ImgItemInfo}">
                                                                        <StackPanel Orientation="Horizontal">
                                                                            <TextBlock TextAlignment="Center" MinWidth="20"
                                               Text="{Binding Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Converter={StaticResource OrdinalConverter}}" />
                                                                            <Grid  VerticalAlignment="Stretch" MinWidth="30" Margin="2">
                                                                                <Grid.Style>
                                                                                    <Style TargetType="{x:Type Grid}">
                                                                                        <Setter Property="Background" Value="{x:Null}"/>
                                                                                        <Style.Triggers>
                                                                                            <DataTrigger Binding="{Binding ImgOpState}" Value="{x:Static local:ImgOpState.Success}">
                                                                                                <Setter Property="Background" Value="Green"></Setter>
                                                                                            </DataTrigger>
                                                                                            <DataTrigger Binding="{Binding ImgOpState}" Value="{x:Static local:ImgOpState.Fail}">
                                                                                                <Setter Property="Background" Value="Red"></Setter>
                                                                                            </DataTrigger>
                                                                                        </Style.Triggers>
                                                                                    </Style>
                                                                                </Grid.Style>
                                                                            </Grid>
                                                                        </StackPanel>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>
                                                            <GridViewColumn Header="{DynamicResource StrProgramFileActive}" lvcctrl:FixedColumn.Width="80">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate DataType="{x:Type local:ImgItemInfo}">
                                                                        <Grid HorizontalAlignment="Left">
                                                                            <CheckBox Grid.Column="0" IsEnabled="False" IsChecked="{Binding IsActived, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalContentAlignment="Center"></CheckBox>
                                                                        </Grid>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>
                                                        </GridView>
                                                    </ListView.View>
                                                </ListView>
                                                <!--<UniformGrid Rows="1" Grid.Row="1" Height="60">
                                                    <UniformGrid.Resources>
                                                        <Style TargetType="Button">
                                                            <Setter Property="Width" Value="60"></Setter>
                                                        </Style>
                                                    </UniformGrid.Resources>
                                                    
                                                </UniformGrid>-->
                                            </Grid>
                                        </avalonDock:LayoutAnchorable>
                                    </avalonDock:LayoutAnchorablePane>
                                </avalonDock:LayoutAnchorablePaneGroup>
                            </avalonDock:LayoutPanel>
                            <!--<avalonDock:LayoutRoot.BottomSide>
                                <avalonDock:LayoutAnchorSide>
                                    <avalonDock:LayoutAnchorGroup>
                                        <avalonDock:LayoutAnchorable  Title="LogView" CanHide="False"  CanClose="False" IsActive="True" FloatingHeight="160" AutoHideMinHeight="160" AutoHideHeight="160">
                                                                                   </avalonDock:LayoutAnchorable>
                                    </avalonDock:LayoutAnchorGroup>
                                </avalonDock:LayoutAnchorSide>
                            </avalonDock:LayoutRoot.BottomSide>-->
                        </avalonDock:LayoutRoot>
                    </avalonDock:DockingManager>
                </Grid>
                
            </TabItem>

        </TabControl>
        <agCustom:LogItemViewEx Grid.Row="3" Margin="0,2" Height="160" AutoScrollLevel="0" AutoScrollItems="True" BorderBrush="Black" MsgLogItems="{Binding Main.LogItems, Source={StaticResource Locator}}"/>
    </Grid>
</Window>



